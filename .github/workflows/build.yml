# Copyright 2023 Goldman Sachs
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: Build CI

env:
  CI_DEPLOYMENT_USERNAME: ${{ secrets.CI_DEPLOYMENT_USERNAME }}
  CI_DEPLOYMENT_PASSWORD: ${{ secrets.CI_DEPLOYMENT_PASSWORD }}
  SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

on: [push, pull_request]

jobs:
  build:
    name: Build
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    # Skip this build for release commits
    if: "!contains(github.event.head_commit.message, '[maven-release-plugin]')"
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Cache Maven dependencies
        uses: actions/cache@v3
        env:
          cache-name: cache-mvn-deps
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 21
          java-package: jdk
          server-id: ossrh
          server-username: CI_DEPLOYMENT_USERNAME
          server-password: CI_DEPLOYMENT_PASSWORD

      - name: Check Java version
        run: java -version

      - name: Configure git
        run: |
          git config --global committer.email "infra@finos.org"
          git config --global committer.name "FINOS Admin"
          git config --global author.email "${GITHUB_ACTOR}@users.noreply.github.com"
          git config --global author.name "${GITHUB_ACTOR}"

      - name: Download deps and plugins
        run: mvn de.qaware.maven:go-offline-maven-plugin:resolve-dependencies

      - name: Collect Workflow Telemetry
        uses: runforesight/workflow-telemetry-action@v1
        with:
          theme: dark

      - name: Build + Test
        if: ((matrix.os == 'ubuntu-latest') && (github.repository == 'finos/legend-engine-ide-lsp') && (github.ref == 'refs/heads/main')) != true
        run: mvn install javadoc:javadoc

      - name: Build + Test + Maven Deploy + Sonar + Docker Snapshot
        if: (matrix.os == 'ubuntu-latest') && (github.repository == 'finos/legend-engine-ide-lsp') && (github.ref == 'refs/heads/main')
        env:
          DOCKER_USERNAME: finos
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn javadoc:javadoc deploy -P attach-sources

      - name: Upload Test Results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: test-results-${{ matrix.os }}
          path: ${{ github.workspace }}/legend-engine-ide-lsp-test-reports/surefire-reports-aggregate/*

      - name: Upload CI Event
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: event-file-${{ matrix.os }}
          path: ${{ github.event_path }}
